import { PromotionNiveauEtudeCreateDto, PromotionNiveauEtudeGetListInput, NiveauEtudeLockDto, PromotionNiveauEtudeUpdateDto, PeriodeConfigCreateDto, PeriodeConfigUpdateDto, SessionEvaluationConfigCreateDto, SessionEvaluationConfigUpdateDto, SessionEvaluationConfigChangeOrderDto, ExamenConfigCreateDto, ExamenConfigUpdateDto, UnitePedagogiqueConfigCreateDto, UnitePedagogiqueConfigUpdateDto, UniteCompensationCreateDto, UniteCompensationUpdateDto, UniteCompensationOptionsDto, MatiereConfigCreateDto, MatiereConfigUpdateDto, MatiereOptionsDto, MatiereExamenCreateDto, MatiereExamenUpdateDto, MatiereExamenOptionsDto } from "../dtos/models";
import { RestService } from "@itcomp/abp-rn";
export declare class PromotionNiveauEtudeService {
    private restService;
    apiName: string;
    constructor(restService: RestService);
    create: (input: PromotionNiveauEtudeCreateDto) => any;
    getList: (input: PromotionNiveauEtudeGetListInput) => any;
    delete: (id: number) => any;
    get: (id: number) => any;
    lock: (id: number, input: NiveauEtudeLockDto) => any;
    unlock: (id: number, input: NiveauEtudeLockDto) => any;
    update: (id: number, input: PromotionNiveauEtudeUpdateDto) => any;
    addPeriode: (id: number, input: PeriodeConfigCreateDto) => any;
    getPeriodes: (id: number) => any;
    removePeriode: (id: number, periodeId: number) => any;
    updatePeriode: (id: number, periodeId: number, input: PeriodeConfigUpdateDto) => any;
    addSessionEvaluation: (id: number, periodeId: number, input: SessionEvaluationConfigCreateDto) => any;
    getSessionsEvaluations: (id: number, periodeId: number) => any;
    removeSessionEvaluation: (id: number, periodeId: number, sessionEvaluationId: number) => any;
    updateSessionEvaluation: (id: number, periodeId: number, sessionEvaluationId: number, input: SessionEvaluationConfigUpdateDto) => any;
    setSessionEvaluationOrder: (id: number, periodeId: number, sessionEvaluationId: number, input: SessionEvaluationConfigChangeOrderDto) => any;
    addExamen: (id: number, periodeId: number, input: ExamenConfigCreateDto) => any;
    getExamens: (id: number, periodeId: number) => any;
    removeExamen: (id: number, periodeId: number, examenId: number) => any;
    updateExamen: (id: number, periodeId: number, examenId: number, input: ExamenConfigUpdateDto) => any;
    addUnitePedagogique: (id: number, periodeId: number, input: UnitePedagogiqueConfigCreateDto) => any;
    getUnitesPedagogiques: (id: number, periodeId: number) => any;
    removeUnitePedagogique: (id: number, periodeId: number, unitePedagogiqueId: number) => any;
    updateUnitePedagogique: (id: number, periodeId: number, unitePedagogiqueId: number, input: UnitePedagogiqueConfigUpdateDto) => any;
    addUniteCompensation: (id: number, input: UniteCompensationCreateDto) => any;
    getUnitesCompensaions: (id: number) => any;
    removeUniteCompensation: (id: number, uniteCompensationId: number) => any;
    updateUniteCompensation: (id: number, uniteCompensationId: number, input: UniteCompensationUpdateDto) => any;
    setUniteCompensationOptions: (id: number, uniteCompensationId: number, input: UniteCompensationOptionsDto) => any;
    addMatiere: (id: number, periodeId: number, input: MatiereConfigCreateDto) => any;
    getMatieres: (id: number, periodeId: number, withDetails?: boolean | undefined) => any;
    getAllMatieres: (id: number, withDetails?: boolean | undefined) => any;
    removeMatiere: (id: number, periodeId: number, matiereId: number) => any;
    updateMatiere: (id: number, periodeId: number, matiereId: number, input: MatiereConfigUpdateDto) => any;
    setMatiereOptions: (id: number, periodeId: number, matiereId: number, input: MatiereOptionsDto) => any;
    removeMatiereSessionEvaluation: (id: number, periodeId: number, matiereId: number, sessionEvaluationId: number) => any;
    setMatiereUnitePedagogique: (id: number, periodeId: number, matiereId: number, unitePedagogiqueId: number | null) => any;
    setMatiereUniteCompensation: (id: number, periodeId: number, matiereId: number, uniteCompensationId: number | null) => any;
    addMatiereExamen: (id: number, periodeId: number, matiereId: number, input: MatiereExamenCreateDto) => any;
    removeMatiereExamen: (id: number, periodeId: number, matiereId: number, examenId: number) => any;
    updateMatiereExamen: (id: number, periodeId: number, matiereId: number, examenId: number, input: MatiereExamenUpdateDto) => any;
    setMatiereExamenOptions: (id: number, periodeId: number, matiereId: number, examenId: number, input: MatiereExamenOptionsDto) => any;
    lockMatiereExamen: (id: number, periodeId: number, matiereId: number, examenId: number) => any;
    unlockMatiereExamen: (id: number, periodeId: number, matiereId: number, examenId: number) => any;
    removeMatiereExamenSessionEvaluation: (id: number, periodeId: number, matiereId: number, examenId: number, sessionEvaluationId: number) => any;
}
